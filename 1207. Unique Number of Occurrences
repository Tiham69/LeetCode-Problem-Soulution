class Solution:
    def uniqueOccurrences(self, arr: List[int]) -> bool:
        dict = {}
        out = []

        for i in arr:
            if i not in dict:
                dict[i] = 1
            else:
                dict[i] += 1
                
        keys = list(dict.keys())
        value = list(map(dict.get, keys))

        for i in value:
            if i in out:
                return False
            else:
                out.append(i)
        return True

# 2nd solution          
class Solution:
    def uniqueOccurrences(self, arr: List[int]) -> bool:
        
        hashMap = {}

        for i in arr:
            hashMap[i] = hashMap.get(i, 0) + 1
        
        return len(set(hashMap.values())) == len(hashMap.keys())

        # 3rd solution logic
        # dict = {}
        # out = []

        # for i in arr:
        #     if i not in dict:
        #         dict[i] = 1
        #     else:
        #         dict[i] += 1
                
        # keys = list(dict.keys())
        # value = list(map(dict.get, keys))

        # return len(set(value)) == len(keys)

        # for i in value:
        #     if i in out:
        #         return False
        #     else:
        #         out.append(i)
        # return True
            
