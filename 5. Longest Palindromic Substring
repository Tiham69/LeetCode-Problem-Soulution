class Solution:
    def palincheck(self, s):
        return s == s[::-1]

    def longestPalindrome(self, s: str) -> str:
        if self.palincheck(s):
            return s
        
        # first solution O(n^2)
        # n = len(s)
        # k = 1
        # max_palin = ""
        # for i in range(n-k):
        #     for j in range(i+1, len(s)+1):
        #         substr = s[i:j]
        #         if self.palincheck(substr) and len(substr) > len(max_palin):
        #             max_palin = substr
        #             k += 1
        # return max_palin
        
        # 2nd solution O(n^2)
        for i in range(len(s)-1, 0, -1):
            for j in range(len(s)-i+1):
                substr = s[j:j+i]
                if self.palincheck(substr):
                    return substr


                

            
            


        

        
