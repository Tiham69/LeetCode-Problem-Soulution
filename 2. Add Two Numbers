# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        # 90% Memory and 90% Time Complexity
        head = ListNode(0)
        tail = head
        carry = 0

        while (l1 != None or l2 != None or carry != 0):
            digit1 = l1.val if l1 is not None else 0
            digit2 = l2.val if l2 is not None else 0

            sum = digit1 + digit2 + carry
            carry = sum // 10

            tail.next = ListNode(sum % 10)
            tail = tail.next

            l1 = l1.next if l1 is not None else None
            l2 = l2.next if l2 is not None else None

        return head.next

        # 79% Time Complexity and 29% Memory
        # head = ListNode()
        # current = head
        # carry = 0

        # while (l1 != None or l2 != None or carry != 0):

        #     value_l1 = l1.val if l1 else 0
        #     value_l2 = l2.val if l2 else 0

        #     total = value_l1 + value_l2 + carry

        #     carry = (total // 10)
        #     current.next = ListNode(total % 10)
        #     current = current.next

        #     l1 = l1.next if l1 else None
        #     l2 = l2.next if l2 else None


        # return head.next
